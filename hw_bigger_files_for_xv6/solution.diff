diff --git a/Makefile b/Makefile
index 5c21b61..53f7c58 100644
--- a/Makefile
+++ b/Makefile
@@ -179,6 +179,7 @@ UPROGS=\
 	_date\
 	_alarmtest\
 	_uthread\
+	_big\
 
 fs.img: mkfs README $(UPROGS)
 	./mkfs fs.img README $(UPROGS)
@@ -215,9 +216,9 @@ QEMUGDB = $(shell if $(QEMU) -help | grep -q '^-gdb'; \
 	then echo "-gdb tcp::$(GDBPORT)"; \
 	else echo "-s -p $(GDBPORT)"; fi)
 ifndef CPUS
-CPUS := 2
+CPUS := 1
 endif
-QEMUOPTS = -hdb fs.img xv6.img -smp $(CPUS) -m 512 $(QEMUEXTRA)
+QEMUOPTS = -hdb fs.img xv6.img -smp $(CPUS) -m 512 $(QEMUEXTRA) -snapshot
 
 qemu: fs.img xv6.img
 	$(QEMU) -serial mon:stdio $(QEMUOPTS)
diff --git a/file.h b/file.h
index 5a4a463..5419dc2 100644
--- a/file.h
+++ b/file.h
@@ -21,7 +21,7 @@ struct inode {
   short minor;
   short nlink;
   uint size;
-  uint addrs[NDIRECT+1];
+  uint addrs[NDIRECT+2];
 };
 #define I_BUSY 0x1
 #define I_VALID 0x2
diff --git a/fs.c b/fs.c
index 025b326..68368d1 100644
--- a/fs.c
+++ b/fs.c
@@ -379,7 +379,30 @@ bmap(struct inode *ip, uint bn)
     brelse(bp);
     return addr;
   }
-
+  bn -= NINDIRECT;
+
+    if (bn < NINDIRECT * NINDIRECT) {
+        int nsdi = bn / NINDIRECT;
+        int nddi = bn % NINDIRECT;
+
+        if ((addr = ip->addrs[NDIRECT+1]) == 0) {
+            ip->addrs[NDIRECT+1] = addr = balloc(ip->dev);
+        }
+
+        int i = 0;
+        for (; i < 2; i++) {
+            bp = bread(ip->dev, addr);
+            a = (uint*)bp->data;
+            if ((addr = a[(i == 0)? nsdi: nddi]) == 0) {
+                a[(i == 0)? nsdi: nddi] = addr = balloc(ip->dev);
+                log_write(bp);
+            }
+            brelse(bp);
+        }
+
+        return addr;
+    }
+  
   panic("bmap: out of range");
 }
 
diff --git a/fs.h b/fs.h
index e1d7d09..611cbcf 100644
--- a/fs.h
+++ b/fs.h
@@ -20,9 +20,9 @@ struct superblock {
   uint bmapstart;    // Block number of first free map block
 };
 
-#define NDIRECT 12
+#define NDIRECT 11
 #define NINDIRECT (BSIZE / sizeof(uint))
-#define MAXFILE (NDIRECT + NINDIRECT)
+#define MAXFILE (NDIRECT + NINDIRECT + NINDIRECT * NINDIRECT)
 
 // On-disk inode structure
 struct dinode {
@@ -31,7 +31,7 @@ struct dinode {
   short minor;          // Minor device number (T_DEV only)
   short nlink;          // Number of links to inode in file system
   uint size;            // Size of file (bytes)
-  uint addrs[NDIRECT+1];   // Data block addresses
+  uint addrs[NDIRECT+2];   // Data block addresses
 };
 
 // Inodes per block.
diff --git a/param.h b/param.h
index a7e90ef..90b8511 100644
--- a/param.h
+++ b/param.h
@@ -10,5 +10,5 @@
 #define MAXOPBLOCKS  10  // max # of blocks any FS op writes
 #define LOGSIZE      (MAXOPBLOCKS*3)  // max data blocks in on-disk log
 #define NBUF         (MAXOPBLOCKS*3)  // size of disk block cache
-#define FSSIZE       1000  // size of file system in blocks
+#define FSSIZE       21113  // size of file system in blocks
 
